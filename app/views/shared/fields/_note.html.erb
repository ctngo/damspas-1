<%
	if defined?(componentIndex) # Then we're working with a component
		prefix = "component_#{componentIndex}_"
		htmlOpen = "<tr><td>%s</td><td>"
		htmlClose = "</td></tr>"
	else # We're working with an object or collection
		prefix = ''
		htmlOpen = "<dt>%s</dt><dd>"
		htmlClose = "</dd>"
	end

	fieldData = @document["#{prefix}note_json_tesim"]

	if fieldData != nil

		htmlOpen %= 'Note'.pluralize(fieldData.count)
		concat htmlOpen.html_safe

		fieldData.each do |datum|
	 		note = JSON.parse(datum)
%>
			<p>
				<strong>
					<% if note['displayLabel'] != nil &&  !note['displayLabel'].blank? %>
						<%= note['displayLabel'].upcase %>
					<% elsif note['type'] != nil && !note['type'].blank? %>
						<%= note['type'].upcase %>
					<% else %>
						General Note
					<% end %>
				</strong>
			</p>
			<p><%= auto_link(note['value']) %></p>
<%
		end

		concat htmlClose.html_safe

	end

	if defined?(componentIndex) # Then we're working with a component
		prefix = "component_#{componentIndex}_"
		htmlOpen = "<tr><td>%s</td><td>"
		htmlClose = "</td></tr>"
	else # We're working with an object or collection
		prefix = ''
		htmlOpen = "<dt>%s</dt><dd>"
		htmlClose = "</dd>"
	end

	fieldData = @document["#{prefix}scopeContentNote_json_tesim"]

	if fieldData != nil

		htmlOpen %= 'Scope Content Note'.pluralize(fieldData.count)
		concat htmlOpen.html_safe

		fieldData.each do |datum|
			scopeContentNote = JSON.parse(datum)
			%>
			<p>
				<strong>
					<% if scopeContentNote['type'] != nil && !scopeContentNote['type'].blank? %>
					<%= scopeContentNote['type'].upcase %>
					<% else %>
					General Scope Content Note
					<% end %>
				</strong>
			</p>
			<p><%= auto_link(scopeContentNote['value']) %></p>
			<%
		end

		concat htmlClose.html_safe

	end

	if defined?(componentIndex) # Then we're working with a component
		prefix = "component_#{componentIndex}_"
		htmlOpen = "<tr><td>%s</td><td>"
		htmlClose = "</td></tr>"
	else # We're working with an object or collection
		prefix = ''
		htmlOpen = "<dt>%s</dt><dd>"
		htmlClose = "</dd>"
	end

	fieldData = @document["#{prefix}custodialResponsibilityNote_json_tesim"]

	if fieldData != nil

		htmlOpen %= 'Custodial Responsibility Note'.pluralize(fieldData.count)
		concat htmlOpen.html_safe

		fieldData.each do |datum|
	 		custodialResponsibilityNote = JSON.parse(fieldData.first)
%>
			<p>
				<strong>
					<% if custodialResponsibilityNote['displayLabel'] != nil &&  !custodialResponsibilityNote['displayLabel'].blank? %>
						<%= custodialResponsibilityNote['displayLabel'].upcase %>
					<% elsif custodialResponsibilityNote['type'] != nil && !custodialResponsibilityNote['type'].blank? %>
						<%= custodialResponsibilityNote['type'].upcase %>
					<% else %>
						Note
					<% end %>
				</strong>
			</p>
			<p><%= auto_link(custodialResponsibilityNote['value']) %></p>
<%
		end

		concat htmlClose.html_safe

	end

	if defined?(componentIndex) # Then we're working with a component
		prefix = "component_#{componentIndex}_"
		htmlOpen = "<tr><td>%s</td><td><ul class='unstyled'>"
		htmlClose = "</ul></td></tr>"
	else # We're working with an object or collection
		prefix = ''
		htmlOpen = "<dt>%s</dt><dd><ul class='unstyled'>"
		htmlClose = "</ul></dd>"
	end

	fieldData = @document["#{prefix}preferredCitationNote_json_tesim"]

	if fieldData != nil

		htmlOpen %= 'Preferred Citation Note'.pluralize(fieldData.count)
		concat htmlOpen.html_safe

		fieldData.each do |datum|
	 		preferredCitationNote = JSON.parse(fieldData.first)
%>
			<p>
				<strong>
					<% if preferredCitationNote['displayLabel'] != nil &&  !preferredCitationNote['displayLabel'].blank? %>
						<%= preferredCitationNote['displayLabel'].upcase %>
					<% elsif preferredCitationNote['type'] != nil && !preferredCitationNote['type'].blank? %>
						<%= preferredCitationNote['type'].upcase %>
					<% else %>
						Note
					<% end %>
				</strong>
			</p>
			<p><%= auto_link(preferredCitationNote['value']) %></p>
<%
		end

		concat htmlClose.html_safe

	end

%>
